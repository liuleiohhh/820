# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'RenderCha.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from qgis.PyQt.QtWidgets import QDialog
from qgis.core import QgsMarkerSymbol, QgsFillSymbol, QgsLineSymbol

color = {
    "红": '255, 0, 0, 255',
    "橙": '255, 125, 0, 255',
    "黄": '255, 255, 0, 255',
    "绿": '0, 255, 0, 255',
    "蓝": '0, 0, 255, 255',
    "靛": '0, 255, 255, 255',
    "紫": '255, 0, 255, 255',
    "黑": '0, 0, 0, 255',
    "白": '255, 255, 255, 255',
    "无填充": '169, 169, 169, 0'
}


class Ui_Dialog_RenderPolygonDialog(QDialog):
    def __init__(self, mapCanvas, layer, parent=None):
        super().__init__(parent)
        self.resize(300, 200)
        self.mapCanvas = mapCanvas
        self.layer = layer
        self.gridLayout_2 = QtWidgets.QGridLayout(self)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_inside = QtWidgets.QLabel(self)
        self.label_inside.setObjectName("label_inside")
        self.horizontalLayout.addWidget(self.label_inside)
        self.comboBox_insideColor = QtWidgets.QComboBox(self)
        self.comboBox_insideColor.setObjectName("comboBox_insideColor")
        self.horizontalLayout.addWidget(self.comboBox_insideColor)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_outline = QtWidgets.QLabel(self)
        self.label_outline.setObjectName("label_outline")
        self.horizontalLayout_2.addWidget(self.label_outline)
        self.doubleSpinBox_outlinewidth = QtWidgets.QDoubleSpinBox(self)
        self.doubleSpinBox_outlinewidth.setObjectName("doubleSpinBox_outlinewidth")
        self.horizontalLayout_2.addWidget(self.doubleSpinBox_outlinewidth)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_outlincolor = QtWidgets.QLabel(self)
        self.label_outlincolor.setObjectName("label_outlincolor")
        self.horizontalLayout_3.addWidget(self.label_outlincolor)
        self.comboBox_outlineColor = QtWidgets.QComboBox(self)
        self.comboBox_outlineColor.setObjectName("comboBox_outlineColor")
        self.horizontalLayout_3.addWidget(self.comboBox_outlineColor)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4.addLayout(self.verticalLayout)
        self.groupBox_preview = QtWidgets.QGroupBox(self)
        self.groupBox_preview.setObjectName("groupBox_preview")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox_preview)
        self.gridLayout.setObjectName("gridLayout")
        self.frame = QtWidgets.QFrame(self.groupBox_preview)
        self.frame.setAutoFillBackground(True)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout.addWidget(self.frame, 0, 0, 1, 1)
        self.horizontalLayout_4.addWidget(self.groupBox_preview)
        self.verticalLayout_2.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setContentsMargins(-1, -1, -1, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem)
        self.pushButton_ok = QtWidgets.QPushButton(self)
        self.pushButton_ok.setObjectName("pushButton_ok")
        self.horizontalLayout_5.addWidget(self.pushButton_ok)
        self.pushButton_cancel = QtWidgets.QPushButton(self)
        self.pushButton_cancel.setObjectName("pushButton_cancel")
        self.horizontalLayout_5.addWidget(self.pushButton_cancel)
        self.verticalLayout_2.addLayout(self.horizontalLayout_5)
        self.gridLayout_2.addLayout(self.verticalLayout_2, 0, 0, 1, 1)

        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)

        self.current_inside_color = "0, 0, 0, 0"
        self.current_outline_color = "0, 0, 0, 0"
        self.initial(layer)

        self.comboBox_insideColor.addItems(['当前色', '无填充', '红', '橙', '黄', '绿', '蓝', '靛', '紫', '黑', '白'])
        self.comboBox_outlineColor.addItems(['红', '橙', '黄', '绿', '蓝', '靛', '紫', '黑', '白'])
        self.comboBox_outlineColor.setCurrentIndex(7)

        self.pushButton_ok.clicked.connect(lambda: self.ChangeSure(self.layer))
        self.pushButton_cancel.clicked.connect(self.cancel)

        self.comboBox_insideColor.activated.connect(self.ValueChanged)
        self.comboBox_outlineColor.activated.connect(self.ValueChanged)
        self.doubleSpinBox_outlinewidth.valueChanged.connect(self.ValueChanged)

        self.ValueChanged()

    def retranslateUi(self, Dialog_ChangeRenDialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog_ChangeRenDialog.setWindowTitle(_translate("Dialog_ChangeRenDialog", "符号选择器"))
        self.label_inside.setText(_translate("Dialog_ChangeRenDialog", "内部填充："))
        self.label_outline.setText(_translate("Dialog_ChangeRenDialog", "轮廓宽度："))
        self.label_outlincolor.setText(_translate("Dialog_ChangeRenDialog", "轮廓颜色："))
        self.groupBox_preview.setTitle(_translate("Dialog_ChangeRenDialog", "预览"))
        self.pushButton_ok.setText(_translate("Dialog_ChangeRenDialog", "选择"))
        self.pushButton_cancel.setText(_translate("Dialog_ChangeRenDialog", "取消"))

    def ValueChanged(self):
        incolor = color[self.comboBox_insideColor.currentText()].split(',')
        outcolor = color[self.comboBox_outlineColor.currentText()].split(',')
        outwidth = self.doubleSpinBox_outlinewidth.text()
        background = "background:rgb" + "(" + incolor[0] + "," + incolor[1] + "," + incolor[2] + ")"
        outline = "border:" + outwidth + "px " + "solid rgb" + "(" + outcolor[0] + "," + outcolor[1] + "," + outcolor[2] + ")"

        self.frame.setStyleSheet(background + ";" + outline)

    def initial(self, layer):
        current_symbol_props = layer.renderer().symbol().symbolLayer(0).properties()

        color.update({"当前色": current_symbol_props['color']})
        incolor_list = current_symbol_props['color'].split(',')
        outline_width = float(current_symbol_props['outline_width'])
        self.doubleSpinBox_outlinewidth.setSpecialValueText(str(outline_width))
        outcolor_list = current_symbol_props['outline_color'].split(',')

        background = "background:rgb" + "(" + incolor_list[0] + "," + incolor_list[1] + "," + incolor_list[2] + ")"
        outline = "border:" + str(outline_width) + "px " + "solid rgb" + "(" + outcolor_list[0] + "," + outcolor_list[1] + "," + outcolor_list[2] + ")"
        self.frame.setStyleSheet(background + ";" + outline)

        self.current_inside_color = incolor_list
        self.current_outline_color = outcolor_list

    def ChangeSure(self, layer):
        current_symbol_props = layer.renderer().symbol().symbolLayer(0).properties()
        current_symbol_props['color'] = color[self.comboBox_insideColor.currentText()]
        current_symbol_props['outline_color'] = color[self.comboBox_outlineColor.currentText()]
        current_symbol_props['outline_width'] = self.doubleSpinBox_outlinewidth.text()
        layer.renderer().setSymbol(QgsFillSymbol.createSimple(current_symbol_props))
        layer.triggerRepaint()
        self.close()

    def cancel(self):
        self.close()


class Ui_Dialog_RenderLineDialog(QDialog):
    def __init__(self, mapCanvas, layer, parent=None):
        super().__init__(parent)
        self.resize(300, 200)
        self.mapCanvas = mapCanvas
        self.layer = layer
        self.gridLayout_2 = QtWidgets.QGridLayout(self)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_linecolor = QtWidgets.QLabel(self)
        self.label_linecolor.setObjectName("label_linecolor")
        self.horizontalLayout.addWidget(self.label_linecolor)
        self.comboBox_linecolor = QtWidgets.QComboBox(self)
        self.comboBox_linecolor.setObjectName("comboBox_linecolor")
        self.horizontalLayout.addWidget(self.comboBox_linecolor)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_linewidth = QtWidgets.QLabel(self)
        self.label_linewidth.setObjectName("label_linewidth")
        self.horizontalLayout_2.addWidget(self.label_linewidth)
        self.doubleSpinBox_linwidth = QtWidgets.QDoubleSpinBox(self)
        self.doubleSpinBox_linwidth.setObjectName("doubleSpinBox_linwidth")
        self.horizontalLayout_2.addWidget(self.doubleSpinBox_linwidth)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3.addLayout(self.verticalLayout)
        self.groupBox_preview = QtWidgets.QGroupBox(self)
        self.groupBox_preview.setObjectName("groupBox_preview")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox_preview)
        self.gridLayout.setObjectName("gridLayout")
        self.frame = QtWidgets.QFrame(self.groupBox_preview)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout.addWidget(self.frame, 0, 0, 1, 1)
        self.horizontalLayout_3.addWidget(self.groupBox_preview)
        self.gridLayout_2.addLayout(self.horizontalLayout_3, 0, 0, 1, 1)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem)
        self.pushButton_sure = QtWidgets.QPushButton(self)
        self.pushButton_sure.setObjectName("pushButton_sure")
        self.horizontalLayout_4.addWidget(self.pushButton_sure)
        self.pushButton_cancel = QtWidgets.QPushButton(self)
        self.pushButton_cancel.setObjectName("pushButton_cancel")
        self.horizontalLayout_4.addWidget(self.pushButton_cancel)
        self.gridLayout_2.addLayout(self.horizontalLayout_4, 1, 0, 1, 1)

        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)

        self.initial(layer)
        self.comboBox_linecolor.addItems(['当前色', '红', '橙', '黄', '绿', '蓝', '靛', '紫', '黑', '白'])
        self.comboBox_linecolor.activated.connect(self.ValueChanged)

        self.pushButton_sure.clicked.connect(lambda: self.LineRendererChangeSure(layer))

    def retranslateUi(self, Dialog_RenderLineDialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog_RenderLineDialog.setWindowTitle(_translate("Dialog_RenderLineDialog", "符号选择器"))
        self.label_linecolor.setText(_translate("Dialog_RenderLineDialog", "线的颜色："))
        self.label_linewidth.setText(_translate("Dialog_RenderLineDialog", "线的宽度："))
        self.groupBox_preview.setTitle(_translate("Dialog_RenderLineDialog", "颜色预览"))
        self.pushButton_sure.setText(_translate("Dialog_RenderLineDialog", "确定"))
        self.pushButton_cancel.setText(_translate("Dialog_RenderLineDialog", "取消"))

    def ValueChanged(self):
        linecolor = color[self.comboBox_linecolor.currentText()].split(',')
        background = "background:rgb" + "(" + linecolor[0] + "," + linecolor[1] + "," + linecolor[2] + ")"
        self.frame.setStyleSheet(background)

    def initial(self, layer):
        current_symbol_props = layer.renderer().symbol().symbolLayer(0).properties()

        color.update({"当前色": current_symbol_props['line_color']})
        linecolor = current_symbol_props['line_color'].split(',')
        linewidth = current_symbol_props['line_width']
        self.doubleSpinBox_linwidth.setSpecialValueText(linewidth)

        background = "background:rgb" + "(" + linecolor[0] + "," + linecolor[1] + "," + linecolor[2] + ")"
        self.frame.setStyleSheet(background)

    def LineRendererChangeSure(self, layer):
        current_symbol_props = layer.renderer().symbol().symbolLayer(0).properties()
        current_symbol_props['line_color'] = color[self.comboBox_linecolor.currentText()]
        current_symbol_props['line_width'] = self.doubleSpinBox_linwidth.text()
        layer.renderer().setSymbol(QgsLineSymbol.createSimple(current_symbol_props))
        layer.triggerRepaint()
        self.close()

    def cancel(self):
        self.close()


class Ui_Dialog_RenderPointDialog(QDialog):
    def __init__(self, mapCanvas, layer, parent=None):
        super().__init__(parent)
        self.resize(300, 200)
        self.mapCanvas = mapCanvas
        self.layer = layer
        self.gridLayout_2 = QtWidgets.QGridLayout(self)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_pointcolor = QtWidgets.QLabel(self)
        self.label_pointcolor.setObjectName("label_pointcolor")
        self.horizontalLayout.addWidget(self.label_pointcolor)
        self.comboBox_pointcolor = QtWidgets.QComboBox(self)
        self.comboBox_pointcolor.setObjectName("comboBox_pointcolor")
        self.horizontalLayout.addWidget(self.comboBox_pointcolor)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_pointsize = QtWidgets.QLabel(self)
        self.label_pointsize.setObjectName("label_pointsize")
        self.horizontalLayout_2.addWidget(self.label_pointsize)
        self.doubleSpinBox_pointsize = QtWidgets.QDoubleSpinBox(self)
        self.doubleSpinBox_pointsize.setObjectName("doubleSpinBox_pointsize")
        self.horizontalLayout_2.addWidget(self.doubleSpinBox_pointsize)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3.addLayout(self.verticalLayout)
        self.groupBox_preview = QtWidgets.QGroupBox(self)
        self.groupBox_preview.setObjectName("groupBox_preview")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox_preview)
        self.gridLayout.setObjectName("gridLayout")
        self.frame = QtWidgets.QFrame(self.groupBox_preview)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout.addWidget(self.frame, 0, 0, 1, 1)
        self.horizontalLayout_3.addWidget(self.groupBox_preview)
        self.gridLayout_2.addLayout(self.horizontalLayout_3, 0, 0, 1, 1)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem)
        self.pushButton_sure = QtWidgets.QPushButton(self)
        self.pushButton_sure.setObjectName("pushButton_sure")
        self.horizontalLayout_4.addWidget(self.pushButton_sure)
        self.pushButton_cancel = QtWidgets.QPushButton(self)
        self.pushButton_cancel.setObjectName("pushButton_cancel")
        self.horizontalLayout_4.addWidget(self.pushButton_cancel)
        self.gridLayout_2.addLayout(self.horizontalLayout_4, 1, 0, 1, 1)

        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)

        self.initial(layer)
        self.comboBox_pointcolor.addItems(['当前色', '红', '橙', '黄', '绿', '蓝', '靛', '紫', '黑', '白'])
        self.comboBox_pointcolor.activated.connect(self.ValueChanged)

        self.pushButton_sure.clicked.connect(lambda: self.PointRendererChangeSure(layer))
        self.pushButton_cancel.clicked.connect(self.cancel)

    def retranslateUi(self, Dialog_RenderLineDialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog_RenderLineDialog.setWindowTitle(_translate("Dialog_RenderLineDialog", "符号选择器"))
        self.label_pointcolor.setText(_translate("Dialog_RenderLineDialog", "点的颜色："))
        self.label_pointsize.setText(_translate("Dialog_RenderLineDialog", "点的大小："))
        self.groupBox_preview.setTitle(_translate("Dialog_RenderLineDialog", "预览"))
        self.pushButton_sure.setText(_translate("Dialog_RenderLineDialog", "确定"))
        self.pushButton_cancel.setText(_translate("Dialog_RenderLineDialog", "取消"))

    def ValueChanged(self):
        pointcolor = color[self.comboBox_pointcolor.currentText()].split(',')
        background = "background:rgb" + "(" + pointcolor[0] + "," + pointcolor[1] + "," + pointcolor[2] + ")"
        self.frame.setStyleSheet(background)

    def initial(self, layer):
        current_symbol_props = layer.renderer().symbol().symbolLayer(0).properties()

        color.update({"当前色": current_symbol_props['color']})
        pointcolor = current_symbol_props['color'].split(',')
        pointsize = current_symbol_props['size']

        self.doubleSpinBox_pointsize.setSpecialValueText(pointsize)

        background = "background:rgb" + "(" + pointcolor[0] + "," + pointcolor[1] + "," + pointcolor[2] + ")"
        self.frame.setStyleSheet(background)

    def PointRendererChangeSure(self, layer):
        current_symbol_props = layer.renderer().symbol().symbolLayer(0).properties()
        current_symbol_props['color'] = color[self.comboBox_pointcolor.currentText()]
        current_symbol_props['size'] = self.doubleSpinBox_pointsize.text()
        layer.renderer().setSymbol(QgsMarkerSymbol.createSimple(current_symbol_props))
        layer.triggerRepaint()
        self.close()

    def cancel(self):
        self.close()